snippet f
  ${1} (${2}) {
    ${3}
  }
snippet con
  const ${1} = ${2} => ${3}
snippet cn
  const ${1} = ${2}
snippet imp
  import ${1} from "${2}"
snippet impt
  import type { ${1} } from "${2}"
snippet exp
  export ${1}
snippet expd
  export default `substitute(Filename(), '^.', '\u&', '')`
snippet expc
  export const ${1}
snippet expt
  export type ${1}
snippet cl
  console.log(${1})
snippet d
  debugger
snippet sw
  switch (${1}) {
    case ${2}:
      ${3}
    default:
      ${4}
  }
snippet r
  return
snippet fl
  // @flow
snippet ext
  extends ${1}
snippet it
  it("${1}", () => {
    ${2}
    expect(${3}).${4}
  })
snippet desc
  describe("${1}", () => {
    it("${2}", () => {
      ${3}
    })
  })
snippet impr
  import React from 'react'
