# Reload source
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"

# Renumber windows when closing them to maintain a "gapless" window numbering
set-option -g renumber-windows on

# Remap prefix to C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# More vim-like navigation
unbind-key x
bind v split-window -h -c '#{pane_current_path}'
bind x split-window -v -c '#{pane_current_path}'
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

unbind-key q
bind q kill-pane

# Resize panes
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

bind -r P swap-window -t -1\; select-window -t -1
bind -r N swap-window -t +1\; select-window -t +1

# Navigate sessions effortlessly
bind -r ( switch-client -p
bind -r ) switch-client -n

# Open empty scratch session in popup window
bind t display-popup -E -w 80% -h 70% "tmux new-session -A -s scratch"

# List sessions alphabetically
bind s choose-tree -s -O name

# Search sessions
bind S display-popup -E -w 75% -h 75% "\
  tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
  sed '/^$/d' |\
  fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\
  xargs tmux switch-client -t"

# Create and search notes more easily from anywhere
bind n display-menu -T "#[align=centre]Notes" \
  "Create new note" n \
    "command-prompt -p 'Note:' 'new-window -n notes nvim -c \"MarginaliaNew %%\"'" \
  "Search notes" s \
    "new-window -n notes 'cd ~/Dropbox/Tekstdokumenter/Wiki && nvim $(find * -type f | fzf --border=none --height=100%)'" \
  "" \
  "Quit menu" q ""

# Run common Git operations from anywhere in a tmux session
bind g display-menu -T "#[align=centre]Git" \
  "Show status" s \
    "display-popup -T '#[align=centre]Git: Show status' -E -w 80% -h 85% \
    'git status; exec zsh'" \
  "Show log" l \
    "display-popup -T '#[align=centre]Git: Show log' -E -w 80% -h 85% \
    'tig'" \
  "Show diff" d \
    "display-popup -T '#[align=centre]Git: Show diff' -E -w 80% -h 85% \
    'git diff | bat --paging=always'" \
  "Show staged changes" t \
    "display-popup -T '#[align=centre]Git: Show staged changes' -E -w 80% -h 85% \
    'git diff --staged | bat --paging=always'" \
  "" \
  "Stage changes" a \
    "display-popup -T '#[align=centre]Git: Stage changes' -E -w 80% -h 85% \
    'git add -p'" \
  "Unstage changes" u \
    "display-popup -T '#[align=centre]Git: Unstage changes' -E -w 80% -h 85% \
    'git reset; exec zsh'" \
  "Commit staged changes" c \
    "display-popup -T '#[align=centre]Git: Commit staged changes' -E -w 80% -h 85% \
    'git commit --verbose; exec zsh'" \
  "Pull changes" p \
    "display-popup -T '#[align=centre]Git: Pull changes' -E -w 80% -h 85% \
    'git pull; exec zsh'" \
  "Push changes" c \
    "confirm -p 'Git: Push changes? (y/n)' \
    'display-popup -T \"Git: Push changes\" -E -w 80% -h 85% \"git push; exec zsh\"'" \
  "" \
  "Checkout (Branch)" b \
    "display-popup -T \"#[align=centre]Git: Checkout (Branch)\" -B -E -w 80% -h 85% 'git checkout $(git branch -a | fzf --border=sharp --height=100% --no-preview)'" \
  "Checkout (Pull request)" r \
    "display-popup -T \"#[align=centre]Git: Checkout (Pull request)\" -B -E -w 80% -h 85% '~/.bin/checkout-pr'" \
  "New branch" n \
    "command-prompt -p 'Branch:' 'run-shell \"git checkout -b %%\"'" \
  "Delete branch" D \
    "display-popup -T \"#[align=centre]Git: Delete branch\" -B -E -w 80% -h 85% 'git branch -d $(git branch -a | fzf --border=sharp --height=100% --no-preview)'" \
  "" \
  "Quit menu" q ""

# Use vim keybindings in copy mode
set-window-option -g mode-keys vi

# Adjust escape time
set -s escape-time 0

# Set the default shell to match `$SHELL`
set -g default-shell $SHELL

# Set up copy-paste
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Set first window to index 1
set -g base-index 1
set -g pane-base-index 1

# Enable Ghostty terminal features
set -g default-terminal "xterm-ghostty"

# Make tmux helpful to co-workers
set-option -g mouse on

# `autoread` in Vim does not work inside tmux without this enabled
set-option -g focus-events on

# Theme
set -g message-style fg=colour12,bg=colour11
set -g message-command-style fg=colour12,bg=colour11

set -g pane-active-border-style fg=colour11
set -g pane-border-style fg=colour11

set -g status-left '#[default] #S #[fg=colour11]｜#[default] '
set -g status-justify 'left'
set -g status-left-length '100'
set -g status-right-length '100'
set -g status 'on'
set -g status-right-style 'none'
set -g status-style 'none'
set -g status-left-style 'none'

set -g window-status-style fg=colour12,bg=colour10
set -g window-status-activity-style fg=colour11,bg=colour11
setw -g window-status-current-format '#I. #[underscore]#W#[nounderscore]'

setw -g window-status-style 'none'
setw -g window-status-activity-style 'none'
setw -g window-status-separator ' '
setw -g window-status-format '#[fg=colour8]#I. #W'
set -g status-right "#(~/.bin/tmux-git-branch)%a %d %b %H:%M #[fg=colour11]｜#[default] #(~/.bin/tmux-battery-status) "

# Allow programs in the pane to bypass tmux using a terminal escape sequence
set -gq allow-passthrough on

# Set visual activity to off in order to have images be automatically hidden and
# shown when switching windows
set -g visual-activity off
